{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"a-N6Ij6wkZis"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import confusion_matrix\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from imblearn.over_sampling import SMOTENC\n","from sklearn.metrics import classification_report\n","from sklearn.preprocessing import OneHotEncoder\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.pipeline import make_pipeline\n","from sklearn.compose import ColumnTransformer"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":13185,"status":"ok","timestamp":1730409783462,"user":{"displayName":"Alberto Frydman","userId":"15645709566698782283"},"user_tz":300},"id":"bNWlBaSs-29c","outputId":"6e78b022-7e5f-419b-d814-dc9d51b273b3"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /gdrive\n"]}],"source":["from google.colab import drive\n","drive.mount('/gdrive',force_remount=True)\n","\n","RUTA = '/gdrive/MyDrive/Colab Notebooks/Hotel Reservations.csv'"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5gDyoTmIlscJ"},"outputs":[],"source":["df = pd.read_csv(RUTA)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"collapsed":true,"executionInfo":{"elapsed":15,"status":"ok","timestamp":1730409794793,"user":{"displayName":"Alberto Frydman","userId":"15645709566698782283"},"user_tz":300},"id":"hTZscdg2lyVS","outputId":"1b9f6c32-923b-4cb4-ccef-bc3684b237bb"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Booking_ID  no_of_adults  no_of_children  no_of_weekend_nights  \\\n","0   INN00001             2               0                     1   \n","1   INN00002             2               0                     2   \n","2   INN00003             1               0                     2   \n","3   INN00004             2               0                     0   \n","4   INN00005             2               0                     1   \n","\n","   no_of_week_nights type_of_meal_plan  required_car_parking_space  \\\n","0                  2       Meal Plan 1                           0   \n","1                  3      Not Selected                           0   \n","2                  1       Meal Plan 1                           0   \n","3                  2       Meal Plan 1                           0   \n","4                  1      Not Selected                           0   \n","\n","  room_type_reserved  lead_time  arrival_year  arrival_month  arrival_date  \\\n","0        Room_Type 1        224          2017             10             2   \n","1        Room_Type 1          5          2018             11             6   \n","2        Room_Type 1          1          2018              2            28   \n","3        Room_Type 1        211          2018              5            20   \n","4        Room_Type 1         48          2018              4            11   \n","\n","  market_segment_type  repeated_guest  no_of_previous_cancellations  \\\n","0             Offline               0                             0   \n","1              Online               0                             0   \n","2              Online               0                             0   \n","3              Online               0                             0   \n","4              Online               0                             0   \n","\n","   no_of_previous_bookings_not_canceled  avg_price_per_room  \\\n","0                                     0               65.00   \n","1                                     0              106.68   \n","2                                     0               60.00   \n","3                                     0              100.00   \n","4                                     0               94.50   \n","\n","   no_of_special_requests booking_status  \n","0                       0   Not_Canceled  \n","1                       1   Not_Canceled  \n","2                       0       Canceled  \n","3                       0       Canceled  \n","4                       0       Canceled  "],"text/html":["\n","  <div id=\"df-64d7863c-5422-4304-8586-da73820cae41\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Booking_ID</th>\n","      <th>no_of_adults</th>\n","      <th>no_of_children</th>\n","      <th>no_of_weekend_nights</th>\n","      <th>no_of_week_nights</th>\n","      <th>type_of_meal_plan</th>\n","      <th>required_car_parking_space</th>\n","      <th>room_type_reserved</th>\n","      <th>lead_time</th>\n","      <th>arrival_year</th>\n","      <th>arrival_month</th>\n","      <th>arrival_date</th>\n","      <th>market_segment_type</th>\n","      <th>repeated_guest</th>\n","      <th>no_of_previous_cancellations</th>\n","      <th>no_of_previous_bookings_not_canceled</th>\n","      <th>avg_price_per_room</th>\n","      <th>no_of_special_requests</th>\n","      <th>booking_status</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>INN00001</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>Meal Plan 1</td>\n","      <td>0</td>\n","      <td>Room_Type 1</td>\n","      <td>224</td>\n","      <td>2017</td>\n","      <td>10</td>\n","      <td>2</td>\n","      <td>Offline</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>65.00</td>\n","      <td>0</td>\n","      <td>Not_Canceled</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>INN00002</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>Not Selected</td>\n","      <td>0</td>\n","      <td>Room_Type 1</td>\n","      <td>5</td>\n","      <td>2018</td>\n","      <td>11</td>\n","      <td>6</td>\n","      <td>Online</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>106.68</td>\n","      <td>1</td>\n","      <td>Not_Canceled</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>INN00003</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>Meal Plan 1</td>\n","      <td>0</td>\n","      <td>Room_Type 1</td>\n","      <td>1</td>\n","      <td>2018</td>\n","      <td>2</td>\n","      <td>28</td>\n","      <td>Online</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>60.00</td>\n","      <td>0</td>\n","      <td>Canceled</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>INN00004</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>Meal Plan 1</td>\n","      <td>0</td>\n","      <td>Room_Type 1</td>\n","      <td>211</td>\n","      <td>2018</td>\n","      <td>5</td>\n","      <td>20</td>\n","      <td>Online</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>100.00</td>\n","      <td>0</td>\n","      <td>Canceled</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>INN00005</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Not Selected</td>\n","      <td>0</td>\n","      <td>Room_Type 1</td>\n","      <td>48</td>\n","      <td>2018</td>\n","      <td>4</td>\n","      <td>11</td>\n","      <td>Online</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>94.50</td>\n","      <td>0</td>\n","      <td>Canceled</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-64d7863c-5422-4304-8586-da73820cae41')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-64d7863c-5422-4304-8586-da73820cae41 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-64d7863c-5422-4304-8586-da73820cae41');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-94d73c4d-8b6e-4606-8a58-61da4b2282b4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-94d73c4d-8b6e-4606-8a58-61da4b2282b4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-94d73c4d-8b6e-4606-8a58-61da4b2282b4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 36275,\n  \"fields\": [\n    {\n      \"column\": \"Booking_ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 36275,\n        \"samples\": [\n          \"INN04969\",\n          \"INN34541\",\n          \"INN36109\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"no_of_adults\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          4,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"no_of_children\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 10,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0,\n          2,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"no_of_weekend_nights\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 7,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2,\n          6,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"no_of_week_nights\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 17,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          2,\n          3,\n          11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"type_of_meal_plan\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Not Selected\",\n          \"Meal Plan 3\",\n          \"Meal Plan 1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"required_car_parking_space\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"room_type_reserved\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Room_Type 1\",\n          \"Room_Type 4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lead_time\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 85,\n        \"min\": 0,\n        \"max\": 443,\n        \"num_unique_values\": 352,\n        \"samples\": [\n          176,\n          81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"arrival_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2017,\n        \"max\": 2018,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2018,\n          2017\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"arrival_month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 1,\n        \"max\": 12,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          3,\n          8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"arrival_date\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 1,\n        \"max\": 31,\n        \"num_unique_values\": 31,\n        \"samples\": [\n          31,\n          21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"market_segment_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Online\",\n          \"Complementary\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"repeated_guest\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"no_of_previous_cancellations\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 13,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          13,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"no_of_previous_bookings_not_canceled\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 58,\n        \"num_unique_values\": 59,\n        \"samples\": [\n          0,\n          12\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"avg_price_per_room\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35.08942403636991,\n        \"min\": 0.0,\n        \"max\": 540.0,\n        \"num_unique_values\": 3930,\n        \"samples\": [\n          198.68,\n          170.63\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"no_of_special_requests\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"booking_status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Canceled\",\n          \"Not_Canceled\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}],"source":["df.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"collapsed":true,"executionInfo":{"elapsed":941,"status":"ok","timestamp":1730409795724,"user":{"displayName":"Alberto Frydman","userId":"15645709566698782283"},"user_tz":300},"id":"ot7m-6-WFcFr","outputId":"cfc76b9e-4c7b-4767-e473-1b67fb016372"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       no_of_adults  no_of_children  no_of_weekend_nights  no_of_week_nights  \\\n","count  36275.000000    36275.000000          36275.000000       36275.000000   \n","mean       1.844962        0.105279              0.810724           2.204300   \n","std        0.518715        0.402648              0.870644           1.410905   \n","min        0.000000        0.000000              0.000000           0.000000   \n","25%        2.000000        0.000000              0.000000           1.000000   \n","50%        2.000000        0.000000              1.000000           2.000000   \n","75%        2.000000        0.000000              2.000000           3.000000   \n","max        4.000000       10.000000              7.000000          17.000000   \n","\n","       required_car_parking_space     lead_time  arrival_year  arrival_month  \\\n","count                36275.000000  36275.000000  36275.000000   36275.000000   \n","mean                     0.030986     85.232557   2017.820427       7.423653   \n","std                      0.173281     85.930817      0.383836       3.069894   \n","min                      0.000000      0.000000   2017.000000       1.000000   \n","25%                      0.000000     17.000000   2018.000000       5.000000   \n","50%                      0.000000     57.000000   2018.000000       8.000000   \n","75%                      0.000000    126.000000   2018.000000      10.000000   \n","max                      1.000000    443.000000   2018.000000      12.000000   \n","\n","       arrival_date  repeated_guest  no_of_previous_cancellations  \\\n","count  36275.000000    36275.000000                  36275.000000   \n","mean      15.596995        0.025637                      0.023349   \n","std        8.740447        0.158053                      0.368331   \n","min        1.000000        0.000000                      0.000000   \n","25%        8.000000        0.000000                      0.000000   \n","50%       16.000000        0.000000                      0.000000   \n","75%       23.000000        0.000000                      0.000000   \n","max       31.000000        1.000000                     13.000000   \n","\n","       no_of_previous_bookings_not_canceled  avg_price_per_room  \\\n","count                          36275.000000        36275.000000   \n","mean                               0.153411          103.423539   \n","std                                1.754171           35.089424   \n","min                                0.000000            0.000000   \n","25%                                0.000000           80.300000   \n","50%                                0.000000           99.450000   \n","75%                                0.000000          120.000000   \n","max                               58.000000          540.000000   \n","\n","       no_of_special_requests  \n","count            36275.000000  \n","mean                 0.619655  \n","std                  0.786236  \n","min                  0.000000  \n","25%                  0.000000  \n","50%                  0.000000  \n","75%                  1.000000  \n","max                  5.000000  "],"text/html":["\n","  <div id=\"df-0830bbda-a62a-4562-973b-8c7120864ff2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>no_of_adults</th>\n","      <th>no_of_children</th>\n","      <th>no_of_weekend_nights</th>\n","      <th>no_of_week_nights</th>\n","      <th>required_car_parking_space</th>\n","      <th>lead_time</th>\n","      <th>arrival_year</th>\n","      <th>arrival_month</th>\n","      <th>arrival_date</th>\n","      <th>repeated_guest</th>\n","      <th>no_of_previous_cancellations</th>\n","      <th>no_of_previous_bookings_not_canceled</th>\n","      <th>avg_price_per_room</th>\n","      <th>no_of_special_requests</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>36275.000000</td>\n","      <td>36275.000000</td>\n","      <td>36275.000000</td>\n","      <td>36275.000000</td>\n","      <td>36275.000000</td>\n","      <td>36275.000000</td>\n","      <td>36275.000000</td>\n","      <td>36275.000000</td>\n","      <td>36275.000000</td>\n","      <td>36275.000000</td>\n","      <td>36275.000000</td>\n","      <td>36275.000000</td>\n","      <td>36275.000000</td>\n","      <td>36275.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1.844962</td>\n","      <td>0.105279</td>\n","      <td>0.810724</td>\n","      <td>2.204300</td>\n","      <td>0.030986</td>\n","      <td>85.232557</td>\n","      <td>2017.820427</td>\n","      <td>7.423653</td>\n","      <td>15.596995</td>\n","      <td>0.025637</td>\n","      <td>0.023349</td>\n","      <td>0.153411</td>\n","      <td>103.423539</td>\n","      <td>0.619655</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.518715</td>\n","      <td>0.402648</td>\n","      <td>0.870644</td>\n","      <td>1.410905</td>\n","      <td>0.173281</td>\n","      <td>85.930817</td>\n","      <td>0.383836</td>\n","      <td>3.069894</td>\n","      <td>8.740447</td>\n","      <td>0.158053</td>\n","      <td>0.368331</td>\n","      <td>1.754171</td>\n","      <td>35.089424</td>\n","      <td>0.786236</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2017.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>17.000000</td>\n","      <td>2018.000000</td>\n","      <td>5.000000</td>\n","      <td>8.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>80.300000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>57.000000</td>\n","      <td>2018.000000</td>\n","      <td>8.000000</td>\n","      <td>16.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>99.450000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>3.000000</td>\n","      <td>0.000000</td>\n","      <td>126.000000</td>\n","      <td>2018.000000</td>\n","      <td>10.000000</td>\n","      <td>23.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>120.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>4.000000</td>\n","      <td>10.000000</td>\n","      <td>7.000000</td>\n","      <td>17.000000</td>\n","      <td>1.000000</td>\n","      <td>443.000000</td>\n","      <td>2018.000000</td>\n","      <td>12.000000</td>\n","      <td>31.000000</td>\n","      <td>1.000000</td>\n","      <td>13.000000</td>\n","      <td>58.000000</td>\n","      <td>540.000000</td>\n","      <td>5.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0830bbda-a62a-4562-973b-8c7120864ff2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0830bbda-a62a-4562-973b-8c7120864ff2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0830bbda-a62a-4562-973b-8c7120864ff2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fc61be1c-7a99-45fe-ac9f-5219a6354c85\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fc61be1c-7a99-45fe-ac9f-5219a6354c85')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fc61be1c-7a99-45fe-ac9f-5219a6354c85 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"no_of_adults\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12824.52483856726,\n        \"min\": 0.0,\n        \"max\": 36275.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          36275.0,\n          1.8449620951068229,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"no_of_children\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12824.618983376778,\n        \"min\": 0.0,\n        \"max\": 36275.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.10527911784975878,\n          10.0,\n          0.4026480635891775\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"no_of_weekend_nights\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12824.559445700932,\n        \"min\": 0.0,\n        \"max\": 36275.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          36275.0,\n          0.810723638869745,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"no_of_week_nights\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12823.806135103609,\n        \"min\": 0.0,\n        \"max\": 36275.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2.2043004824259134,\n          2.0,\n          36275.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"required_car_parking_space\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12825.088423722018,\n        \"min\": 0.0,\n        \"max\": 36275.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.0309855272226051,\n          1.0,\n          0.17328084736888597\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lead_time\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12784.785498648725,\n        \"min\": 0.0,\n        \"max\": 36275.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          85.23255685733976,\n          57.0,\n          36275.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"arrival_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12234.02806138302,\n        \"min\": 0.3838364395590917,\n        \"max\": 36275.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2017.8204272915232,\n          2018.0,\n          0.3838364395590917\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"arrival_month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12822.801464849852,\n        \"min\": 1.0,\n        \"max\": 36275.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          7.423652653342522,\n          8.0,\n          36275.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"arrival_date\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12819.933286411135,\n        \"min\": 1.0,\n        \"max\": 36275.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          15.596995175740869,\n          16.0,\n          36275.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"repeated_guest\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12825.08946294667,\n        \"min\": 0.0,\n        \"max\": 36275.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.02563749138525155,\n          1.0,\n          0.15805346903515535\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"no_of_previous_cancellations\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12824.473661091766,\n        \"min\": 0.0,\n        \"max\": 36275.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.023349414197105445,\n          13.0,\n          0.3683314479198375\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"no_of_previous_bookings_not_canceled\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12822.139355010762,\n        \"min\": 0.0,\n        \"max\": 36275.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.15341144038594073,\n          58.0,\n          1.754170711442222\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"avg_price_per_room\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12776.843959253338,\n        \"min\": 0.0,\n        \"max\": 36275.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          103.42353907649897,\n          99.45,\n          36275.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"no_of_special_requests\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12824.775296524598,\n        \"min\": 0.0,\n        \"max\": 36275.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          36275.0,\n          0.6196554100620262,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}],"source":["df.describe()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"executionInfo":{"elapsed":169,"status":"ok","timestamp":1730409795724,"user":{"displayName":"Alberto Frydman","userId":"15645709566698782283"},"user_tz":300},"id":"w_XTacnGwace","outputId":"7b84b10a-740f-4148-d3c3-db1c61918be9"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 36275 entries, 0 to 36274\n","Data columns (total 19 columns):\n"," #   Column                                Non-Null Count  Dtype  \n","---  ------                                --------------  -----  \n"," 0   Booking_ID                            36275 non-null  object \n"," 1   no_of_adults                          36275 non-null  int64  \n"," 2   no_of_children                        36275 non-null  int64  \n"," 3   no_of_weekend_nights                  36275 non-null  int64  \n"," 4   no_of_week_nights                     36275 non-null  int64  \n"," 5   type_of_meal_plan                     36275 non-null  object \n"," 6   required_car_parking_space            36275 non-null  int64  \n"," 7   room_type_reserved                    36275 non-null  object \n"," 8   lead_time                             36275 non-null  int64  \n"," 9   arrival_year                          36275 non-null  int64  \n"," 10  arrival_month                         36275 non-null  int64  \n"," 11  arrival_date                          36275 non-null  int64  \n"," 12  market_segment_type                   36275 non-null  object \n"," 13  repeated_guest                        36275 non-null  int64  \n"," 14  no_of_previous_cancellations          36275 non-null  int64  \n"," 15  no_of_previous_bookings_not_canceled  36275 non-null  int64  \n"," 16  avg_price_per_room                    36275 non-null  float64\n"," 17  no_of_special_requests                36275 non-null  int64  \n"," 18  booking_status                        36275 non-null  object \n","dtypes: float64(1), int64(13), object(5)\n","memory usage: 5.3+ MB\n"]}],"source":["df.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"80GCGt1k4OU_"},"outputs":[],"source":["X = df.drop(['booking_status','Booking_ID','no_of_previous_cancellations','repeated_guest','required_car_parking_space','no_of_previous_bookings_not_canceled'], axis=1)\n","y = df['booking_status']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"executionInfo":{"elapsed":158,"status":"ok","timestamp":1730409795725,"user":{"displayName":"Alberto Frydman","userId":"15645709566698782283"},"user_tz":300},"id":"k2R8ftiFPGHD","outputId":"1c43e373-b04f-453f-83e5-9dd2420d73fa"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["booking_status\n","Not_Canceled    24390\n","Canceled        11885\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>booking_status</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Not_Canceled</th>\n","      <td>24390</td>\n","    </tr>\n","    <tr>\n","      <th>Canceled</th>\n","      <td>11885</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":10}],"source":["df['booking_status'].value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-qihAGg036Fd"},"outputs":[],"source":["X_train, X_test, y_train, y_test = train_test_split(\n","    X, y, test_size=0.3, random_state=42)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"executionInfo":{"elapsed":51,"status":"ok","timestamp":1730409833207,"user":{"displayName":"Alberto Frydman","userId":"15645709566698782283"},"user_tz":300},"id":"b0Tf1D_9JuEp","outputId":"1935ed90-3725-4d33-d993-1694d9bdb7f7"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["booking_status\n","Not_Canceled    17114\n","Canceled         8278\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>booking_status</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Not_Canceled</th>\n","      <td>17114</td>\n","    </tr>\n","    <tr>\n","      <th>Canceled</th>\n","      <td>8278</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":13}],"source":["y_train.value_counts()"]},{"cell_type":"code","source":["smote_nc = SMOTENC(categorical_features=[4,5,10], sampling_strategy='auto', random_state=42)"],"metadata":{"id":"stspbbR8xRMM"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KZprM_g-ZML1"},"outputs":[],"source":["X_resampled, y_resampled = smote_nc.fit_resample(X_train, y_train)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"elapsed":960,"status":"ok","timestamp":1730409951013,"user":{"displayName":"Alberto Frydman","userId":"15645709566698782283"},"user_tz":300},"id":"e7EjJ3CLVV5R","outputId":"6a142c76-81ab-40b6-eb0b-1603b5d5570c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["pandas.core.frame.DataFrame"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>pandas.core.frame.DataFrame</b><br/>def __init__(data=None, index: Axes | None=None, columns: Axes | None=None, dtype: Dtype | None=None, copy: bool | None=None) -&gt; None</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py</a>Two-dimensional, size-mutable, potentially heterogeneous tabular data.\n","\n","Data structure also contains labeled axes (rows and columns).\n","Arithmetic operations align on both row and column labels. Can be\n","thought of as a dict-like container for Series objects. The primary\n","pandas data structure.\n","\n","Parameters\n","----------\n","data : ndarray (structured or homogeneous), Iterable, dict, or DataFrame\n","    Dict can contain Series, arrays, constants, dataclass or list-like objects. If\n","    data is a dict, column order follows insertion-order. If a dict contains Series\n","    which have an index defined, it is aligned by its index. This alignment also\n","    occurs if data is a Series or a DataFrame itself. Alignment is done on\n","    Series/DataFrame inputs.\n","\n","    If data is a list of dicts, column order follows insertion-order.\n","\n","index : Index or array-like\n","    Index to use for resulting frame. Will default to RangeIndex if\n","    no indexing information part of input data and no index provided.\n","columns : Index or array-like\n","    Column labels to use for resulting frame when data does not have them,\n","    defaulting to RangeIndex(0, 1, 2, ..., n). If data contains column labels,\n","    will perform column selection instead.\n","dtype : dtype, default None\n","    Data type to force. Only a single dtype is allowed. If None, infer.\n","copy : bool or None, default None\n","    Copy data from inputs.\n","    For dict data, the default of None behaves like ``copy=True``.  For DataFrame\n","    or 2d ndarray input, the default of None behaves like ``copy=False``.\n","    If data is a dict containing one or more Series (possibly of different dtypes),\n","    ``copy=False`` will ensure that these inputs are not copied.\n","\n","    .. versionchanged:: 1.3.0\n","\n","See Also\n","--------\n","DataFrame.from_records : Constructor from tuples, also record arrays.\n","DataFrame.from_dict : From dicts of Series, arrays, or dicts.\n","read_csv : Read a comma-separated values (csv) file into DataFrame.\n","read_table : Read general delimited file into DataFrame.\n","read_clipboard : Read text from clipboard into DataFrame.\n","\n","Notes\n","-----\n","Please reference the :ref:`User Guide &lt;basics.dataframe&gt;` for more information.\n","\n","Examples\n","--------\n","Constructing DataFrame from a dictionary.\n","\n","&gt;&gt;&gt; d = {&#x27;col1&#x27;: [1, 2], &#x27;col2&#x27;: [3, 4]}\n","&gt;&gt;&gt; df = pd.DataFrame(data=d)\n","&gt;&gt;&gt; df\n","   col1  col2\n","0     1     3\n","1     2     4\n","\n","Notice that the inferred dtype is int64.\n","\n","&gt;&gt;&gt; df.dtypes\n","col1    int64\n","col2    int64\n","dtype: object\n","\n","To enforce a single dtype:\n","\n","&gt;&gt;&gt; df = pd.DataFrame(data=d, dtype=np.int8)\n","&gt;&gt;&gt; df.dtypes\n","col1    int8\n","col2    int8\n","dtype: object\n","\n","Constructing DataFrame from a dictionary including Series:\n","\n","&gt;&gt;&gt; d = {&#x27;col1&#x27;: [0, 1, 2, 3], &#x27;col2&#x27;: pd.Series([2, 3], index=[2, 3])}\n","&gt;&gt;&gt; pd.DataFrame(data=d, index=[0, 1, 2, 3])\n","   col1  col2\n","0     0   NaN\n","1     1   NaN\n","2     2   2.0\n","3     3   3.0\n","\n","Constructing DataFrame from numpy ndarray:\n","\n","&gt;&gt;&gt; df2 = pd.DataFrame(np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]]),\n","...                    columns=[&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;])\n","&gt;&gt;&gt; df2\n","   a  b  c\n","0  1  2  3\n","1  4  5  6\n","2  7  8  9\n","\n","Constructing DataFrame from a numpy ndarray that has labeled columns:\n","\n","&gt;&gt;&gt; data = np.array([(1, 2, 3), (4, 5, 6), (7, 8, 9)],\n","...                 dtype=[(&quot;a&quot;, &quot;i4&quot;), (&quot;b&quot;, &quot;i4&quot;), (&quot;c&quot;, &quot;i4&quot;)])\n","&gt;&gt;&gt; df3 = pd.DataFrame(data, columns=[&#x27;c&#x27;, &#x27;a&#x27;])\n","...\n","&gt;&gt;&gt; df3\n","   c  a\n","0  3  1\n","1  6  4\n","2  9  7\n","\n","Constructing DataFrame from dataclass:\n","\n","&gt;&gt;&gt; from dataclasses import make_dataclass\n","&gt;&gt;&gt; Point = make_dataclass(&quot;Point&quot;, [(&quot;x&quot;, int), (&quot;y&quot;, int)])\n","&gt;&gt;&gt; pd.DataFrame([Point(0, 0), Point(0, 3), Point(2, 3)])\n","   x  y\n","0  0  0\n","1  0  3\n","2  2  3\n","\n","Constructing DataFrame from Series/DataFrame:\n","\n","&gt;&gt;&gt; ser = pd.Series([1, 2, 3], index=[&quot;a&quot;, &quot;b&quot;, &quot;c&quot;])\n","&gt;&gt;&gt; df = pd.DataFrame(data=ser, index=[&quot;a&quot;, &quot;c&quot;])\n","&gt;&gt;&gt; df\n","   0\n","a  1\n","c  3\n","\n","&gt;&gt;&gt; df1 = pd.DataFrame([1, 2, 3], index=[&quot;a&quot;, &quot;b&quot;, &quot;c&quot;], columns=[&quot;x&quot;])\n","&gt;&gt;&gt; df2 = pd.DataFrame(data=df1, index=[&quot;a&quot;, &quot;c&quot;])\n","&gt;&gt;&gt; df2\n","   x\n","a  1\n","c  3</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 509);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":20}],"source":["type(X_resampled)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"executionInfo":{"elapsed":19,"status":"ok","timestamp":1730409951533,"user":{"displayName":"Alberto Frydman","userId":"15645709566698782283"},"user_tz":300},"id":"trAKE50XDyIH","outputId":"91471533-ccd7-4b48-87e7-efa935b04cc1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["booking_status\n","Canceled        17114\n","Not_Canceled    17114\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>booking_status</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Canceled</th>\n","      <td>17114</td>\n","    </tr>\n","    <tr>\n","      <th>Not_Canceled</th>\n","      <td>17114</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":21}],"source":["y_resampled.value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":406,"status":"ok","timestamp":1730409982762,"user":{"displayName":"Alberto Frydman","userId":"15645709566698782283"},"user_tz":300},"id":"TPbClGtoJHV7","outputId":"514e452b-55af-4b97-c978-5d831159b1c8"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["OrderedDict([('Canceled', 8836)])"]},"metadata":{},"execution_count":22}],"source":["smote_nc.sampling_strategy_"]},{"cell_type":"code","source":["8278+8836\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nlJCYqqsefs7","executionInfo":{"status":"ok","timestamp":1730410062974,"user_tz":300,"elapsed":883,"user":{"displayName":"Alberto Frydman","userId":"15645709566698782283"}},"outputId":"a418ab80-fc77-432f-c0ba-7f2c463ab849"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["17114"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","execution_count":null,"metadata":{"collapsed":true,"executionInfo":{"elapsed":438,"status":"ok","timestamp":1730410074810,"user":{"displayName":"Alberto Frydman","userId":"15645709566698782283"},"user_tz":300},"id":"FAv5wTU8UIFH","colab":{"base_uri":"https://localhost:8080/","height":226},"outputId":"261fafe9-a3ca-4923-85c3-dcb014aa5e9e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   no_of_adults  no_of_children  no_of_weekend_nights  no_of_week_nights  \\\n","0             2               0                     1                  3   \n","1             2               0                     1                  3   \n","2             2               0                     1                  4   \n","3             2               0                     2                  0   \n","4             2               1                     0                  4   \n","\n","  type_of_meal_plan room_type_reserved  lead_time  arrival_year  \\\n","0       Meal Plan 1        Room_Type 1        200          2018   \n","1       Meal Plan 1        Room_Type 1         79          2018   \n","2       Meal Plan 1        Room_Type 4         78          2018   \n","3       Meal Plan 1        Room_Type 1         61          2017   \n","4       Meal Plan 1        Room_Type 1        201          2018   \n","\n","   arrival_month  arrival_date market_segment_type  avg_price_per_room  \\\n","0              8            29              Online               90.95   \n","1              3            24              Online               90.95   \n","2              4             6              Online               99.45   \n","3             10             4             Offline               91.00   \n","4             11             1              Online               82.28   \n","\n","   no_of_special_requests  \n","0                       0  \n","1                       1  \n","2                       1  \n","3                       0  \n","4                       3  "],"text/html":["\n","  <div id=\"df-9d02271e-0565-4c7f-9502-6c5c630d107b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>no_of_adults</th>\n","      <th>no_of_children</th>\n","      <th>no_of_weekend_nights</th>\n","      <th>no_of_week_nights</th>\n","      <th>type_of_meal_plan</th>\n","      <th>room_type_reserved</th>\n","      <th>lead_time</th>\n","      <th>arrival_year</th>\n","      <th>arrival_month</th>\n","      <th>arrival_date</th>\n","      <th>market_segment_type</th>\n","      <th>avg_price_per_room</th>\n","      <th>no_of_special_requests</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Meal Plan 1</td>\n","      <td>Room_Type 1</td>\n","      <td>200</td>\n","      <td>2018</td>\n","      <td>8</td>\n","      <td>29</td>\n","      <td>Online</td>\n","      <td>90.95</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Meal Plan 1</td>\n","      <td>Room_Type 1</td>\n","      <td>79</td>\n","      <td>2018</td>\n","      <td>3</td>\n","      <td>24</td>\n","      <td>Online</td>\n","      <td>90.95</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>Meal Plan 1</td>\n","      <td>Room_Type 4</td>\n","      <td>78</td>\n","      <td>2018</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>Online</td>\n","      <td>99.45</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>Meal Plan 1</td>\n","      <td>Room_Type 1</td>\n","      <td>61</td>\n","      <td>2017</td>\n","      <td>10</td>\n","      <td>4</td>\n","      <td>Offline</td>\n","      <td>91.00</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>Meal Plan 1</td>\n","      <td>Room_Type 1</td>\n","      <td>201</td>\n","      <td>2018</td>\n","      <td>11</td>\n","      <td>1</td>\n","      <td>Online</td>\n","      <td>82.28</td>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9d02271e-0565-4c7f-9502-6c5c630d107b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9d02271e-0565-4c7f-9502-6c5c630d107b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9d02271e-0565-4c7f-9502-6c5c630d107b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fe504f4b-abae-4d90-a62f-ad6592a074f7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fe504f4b-abae-4d90-a62f-ad6592a074f7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fe504f4b-abae-4d90-a62f-ad6592a074f7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_resampled","summary":"{\n  \"name\": \"X_resampled\",\n  \"rows\": 34228,\n  \"fields\": [\n    {\n      \"column\": \"no_of_adults\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          4,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"no_of_children\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 10,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0,\n          1,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"no_of_weekend_nights\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1,\n          2,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"no_of_week_nights\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 17,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          3,\n          4,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"type_of_meal_plan\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Meal Plan 2\",\n          \"Meal Plan 3\",\n          \"Meal Plan 1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"room_type_reserved\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Room_Type 1\",\n          \"Room_Type 4\",\n          \"Room_Type 7\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lead_time\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 92,\n        \"min\": 0,\n        \"max\": 443,\n        \"num_unique_values\": 353,\n        \"samples\": [\n          153,\n          258,\n          119\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"arrival_year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2017,\n        \"max\": 2018,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2017,\n          2018\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"arrival_month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 12,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          1,\n          9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"arrival_date\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 1,\n        \"max\": 31,\n        \"num_unique_values\": 31,\n        \"samples\": [\n          20,\n          21\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"market_segment_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Offline\",\n          \"Complementary\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"avg_price_per_room\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34.49566079556653,\n        \"min\": 0.0,\n        \"max\": 375.5,\n        \"num_unique_values\": 8052,\n        \"samples\": [\n          81.26,\n          109.46149112698589\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"no_of_special_requests\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":25}],"source":["X_resampled.head()\n"]},{"cell_type":"markdown","metadata":{"id":"Y6b2OeHOOzdZ"},"source":["## Modelos"]},{"cell_type":"code","source":["cat_pipeline = make_pipeline(\n","OneHotEncoder(handle_unknown=\"ignore\"))\n","\n","num_pipeline = make_pipeline(\n","StandardScaler())"],"metadata":{"id":"X0Bi0qii8t-4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.compose import make_column_selector, make_column_transformer\n","\n","preprocessing = make_column_transformer(\n","(num_pipeline, make_column_selector(dtype_include=np.number)),\n","(cat_pipeline, make_column_selector(dtype_include=object)),\n",")"],"metadata":{"id":"ll-ylc__1SxU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["log_reg = make_pipeline(preprocessing, LogisticRegression())"],"metadata":{"id":"8rOC82mM9tHy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["modelo = log_reg.fit(X_resampled, y_resampled)"],"metadata":{"id":"KfMJ42Bm95Tg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_pred = modelo.predict(X_test)"],"metadata":{"id":"TG5-1kvO_2QN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(classification_report(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dIzQdmat_3Ki","executionInfo":{"status":"ok","timestamp":1730410104293,"user_tz":300,"elapsed":1401,"user":{"displayName":"Alberto Frydman","userId":"15645709566698782283"}},"outputId":"42e3fe89-ea2e-44b4-ef9a-1afe5598b3bf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","    Canceled       0.64      0.74      0.69      3607\n","Not_Canceled       0.86      0.80      0.83      7276\n","\n","    accuracy                           0.78     10883\n","   macro avg       0.75      0.77      0.76     10883\n","weighted avg       0.79      0.78      0.78     10883\n","\n"]}]},{"cell_type":"markdown","source":["## Con SMOTE Pipeline"],"metadata":{"id":"-U_0HYJRDEpu"}},{"cell_type":"code","source":["from sklearn.metrics import balanced_accuracy_score"],"metadata":{"id":"PVx-MUtbDJsZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ba_test = balanced_accuracy_score(y_test, y_pred)\n","ba_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GgMVTdULfAI8","executionInfo":{"status":"ok","timestamp":1730410215162,"user_tz":300,"elapsed":556,"user":{"displayName":"Alberto Frydman","userId":"15645709566698782283"}},"outputId":"13aa9a27-9d4f-4569-99ed-b203b990d0f6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7673691990392513"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["# Probar Random Forest, Bagging, Boosting\n","# Usar Pipeline con CV (el primer step es el del balanceo, luego preprocesamiento, luego grid search)"],"metadata":{"id":"qSZU7XsAfFZO"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[{"file_id":"1SCc2Kws5wvrtCB5zcFttIrMbJ8OdzMZ_","timestamp":1730149777433},{"file_id":"1gAs4I9HSBrf48XG0qaAD7Zwb3Zjnx-Y5","timestamp":1729173956286}],"authorship_tag":"ABX9TyOQXVQWY8MGMtYKYXq0bEwD"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}